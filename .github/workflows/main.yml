name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js 12
#       uses: actions/setup-node@v1
#       with:
#         node-version: 12.x
#     - run: npm i
#     - run: npm run build --if-present
#     - run: npm test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Login to Docker Registry
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - uses: actions/checkout@v3
      # - name: Build the image
      #   run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME}}/node-shark:${GITHUB_SHA::6}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: docker.io/${{ secrets.DOCKER_USERNAME}}/node-shark:${ GITHUB_SHA::6 }

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - name: Pull Code
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     port: 22
      #     script: |
      #       cd /home/ubuntu/project3/node
      #       git pull

      - name: Deploy to Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/project3
            docker-compose down
            docker-compose up -d
